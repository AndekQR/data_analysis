[{"D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\App.js":"1","D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\reportWebVitals.js":"2","D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\index.js":"3","D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\redux\\store.js":"4","D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\components\\mainPage\\mainPage.jsx":"5","D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\services\\DataLoader.service..js":"6","D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\components\\appBar\\appBar.jsx":"7","D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\components\\theme.jsx":"8","D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\components\\chartOne\\chartOne.jsx":"9","D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\redux\\reducers\\index.js":"10","D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\components\\mapChart\\mapChart.jsx":"11","D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\services\\dataUtils.service.js":"12","D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\redux\\reducers\\progressBar.reducer.js":"13","D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\redux\\actions\\progressBar.actions.js":"14","D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\components\\chernoffsFacesChart\\chernoffsFacesChart.jsx":"15"},{"size":270,"mtime":1606837608352,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":766,"mtime":1606910810600,"results":"19","hashOfConfig":"17"},{"size":338,"mtime":1608134950578,"results":"20","hashOfConfig":"17"},{"size":1837,"mtime":1609147651489,"results":"21","hashOfConfig":"17"},{"size":693,"mtime":1606842360416,"results":"22","hashOfConfig":"17"},{"size":3180,"mtime":1609145088992,"results":"23","hashOfConfig":"17"},{"size":328,"mtime":1606739030821,"results":"24","hashOfConfig":"17"},{"size":5994,"mtime":1609145088949,"results":"25","hashOfConfig":"17"},{"size":191,"mtime":1608126884146,"results":"26","hashOfConfig":"17"},{"size":5609,"mtime":1609145088884,"results":"27","hashOfConfig":"17"},{"size":5193,"mtime":1609144441668,"results":"28","hashOfConfig":"17"},{"size":443,"mtime":1608130059664,"results":"29","hashOfConfig":"17"},{"size":313,"mtime":1608126516040,"results":"30","hashOfConfig":"17"},{"size":16668,"mtime":1609150690920,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"rj2yzq",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"35"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"35"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"35"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\App.js",["67"],"import \"./App.css\";\nimport MainPage from \"./components/mainPage/mainPage\";\nimport React from \"react\";\nimport MyAppBar from \"./components/appBar/appBar\";\n\n\nfunction App() {\n    return (\n\n        <div>\n            <MainPage/>\n        </div>\n\n    );\n}\n\nexport default App;\n",["68","69"],"D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\reportWebVitals.js",[],"D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\index.js",[],"D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\redux\\store.js",[],"D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\components\\mainPage\\mainPage.jsx",["70","71","72","73"],"D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\services\\DataLoader.service..js",[],"D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\components\\appBar\\appBar.jsx",["74","75"],"import AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {CloudUpload} from \"@material-ui/icons\";\r\nimport DataLoaderService from \"../../services/DataLoader.service.\";\r\nimport \"./style.scss\"\r\nimport progressBarImage from \"../../assets/progress.gif\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {progressBarActions} from \"../../redux/actions/progressBar.actions\";\r\n\r\nconst MyAppBar = ({setData}) => {\r\n\r\n    let dataLoader = new DataLoaderService()\r\n    const [file, setFile] = useState(null)\r\n    const progressBarState = useSelector(state => state.progressBar)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (file != null) {\r\n            dispatch(progressBarActions.showProgressBar())\r\n            dataLoader.loadData(file)\r\n                .then((value) => {\r\n                    setData(value)\r\n                    dispatch(progressBarActions.hideProgressBar())\r\n                })\r\n                .catch(error => {\r\n                    console.log(error.message)\r\n                    dispatch(progressBarActions.hideProgressBar())\r\n                })\r\n        }\r\n    }, [file])\r\n\r\n    const selectFile = event => {\r\n        dispatch(progressBarActions.showProgressBar())\r\n        setFile(event.target.files[0])\r\n        dispatch(progressBarActions.hideProgressBar())\r\n    }\r\n\r\n    const onCancelInputWindow = () => {\r\n        window.removeEventListener('focus', onCancelInputWindow)\r\n        dispatch(progressBarActions.hideProgressBar())\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={\"root\"}>\r\n            <AppBar color={\"secondary\"} position=\"static\">\r\n                <Toolbar className={\"toolbar\"}>\r\n                    {(progressBarState.visible === true) &&\r\n                    <img className={\"progressBar\"} src={progressBarImage} alt={\"progress...\"}/>}\r\n                    <div className={\"buttons_container\"}>\r\n                        <input\r\n                            accept=\".csv\"\r\n                            className={\"input\"}\r\n                            id=\"contained-button-file\"\r\n                            type=\"file\"\r\n                            style={{display: \"none\"}}\r\n                            onChange={selectFile}\r\n                        />\r\n                        <label htmlFor=\"contained-button-file\">\r\n                            {file && <span className={\"fileName\"}>{file.name}</span>}\r\n                            <Button onClick={() => {\r\n                                dispatch(progressBarActions.showProgressBar())\r\n                                // window.addEventListener('focus', onCancelInputWindow)\r\n                            }} className={\"button\"} startIcon={<CloudUpload/>} variant=\"contained\"\r\n                                    color={\"primary\"} component=\"span\">\r\n                                Choose data file\r\n                            </Button>\r\n                        </label>\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyAppBar","D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\components\\theme.jsx",[],"D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\components\\chartOne\\chartOne.jsx",["76","77","78"],"import React, {useEffect, useState} from \"react\";\r\nimport {Area, AreaChart, Legend, Tooltip, XAxis, YAxis} from \"recharts\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport \"./style.scss\"\r\nimport {useDispatch} from \"react-redux\";\r\nimport {progressBarActions} from \"../../redux/actions/progressBar.actions\";\r\n\r\n/**\r\n * Wyświetla diagram prezentujący zakres wieku w jakim ludzie umierali w określonym roku\r\n *\r\n * @param data - dane pobrane z pliku\r\n * @returns {JSX.Element}\r\n * @constructor\r\n */\r\nconst ChartOne = ({dataUtils}) => {\r\n\r\n    const maxAge = 100\r\n\r\n    const [allCountries, setAllCountries] = useState(null)\r\n    //kraj z którego wyświetlane są statystyki w tym wykresie\r\n    const [country, selectCountry] = useState(null)\r\n    const [specificData, setSpecificData] = useState()\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (country != null) {\r\n            dispatch(progressBarActions.showProgressBar())\r\n            setSpecificData(getUpdatedData)\r\n\r\n        }\r\n    }, [country])\r\n\r\n    useEffect(() => {\r\n        dispatch(progressBarActions.hideProgressBar())\r\n    }, [specificData])\r\n\r\n    useEffect(() => {\r\n        dispatch(progressBarActions.showProgressBar())\r\n        dataUtils.getDistinctsAllCountires().then(data => {\r\n            setAllCountries(data)\r\n            selectCountry(data[0])\r\n            dispatch(progressBarActions.hideProgressBar())\r\n        })\r\n    }, [])\r\n\r\n    /**\r\n     * zwraca wiek od którego ludzie umierją w konkretnym roku (15-24 years, 75+ years)\r\n     *\r\n     * @param ageFromData - rekord z kolumny age z danych\r\n     */\r\n    function getStartAge(ageFromData) {\r\n        let indexOfDash = ageFromData.indexOf('-')\r\n        let result = 0\r\n        if (indexOfDash === -1) {\r\n            let indexOfAddSign = ageFromData.indexOf('+')\r\n            result = Number(ageFromData.substring(0, indexOfAddSign))\r\n        } else {\r\n            result = Number(ageFromData.substring(0, indexOfDash))\r\n        }\r\n        return result\r\n    }\r\n\r\n    function getEndAge(ageFromData) {\r\n        let indexOfDash = ageFromData.indexOf('-')\r\n        let result = 0\r\n        if (indexOfDash === -1) {\r\n            result = maxAge\r\n        } else {\r\n            let indexOfSpace = ageFromData.indexOf(' ')\r\n            result = Number(ageFromData.substring(indexOfDash + 1, indexOfSpace))\r\n        }\r\n        return result\r\n    }\r\n\r\n\r\n    /**\r\n     * zwraca wartość średnią początkowej wartości wieku w którym umierali ludzie\r\n     * z wybranego roku i kraju\r\n     * @param year\r\n     * @param country\r\n     */\r\n    function getAverageStartAge(year, country) {\r\n        let result = 0\r\n        const filteredData = dataUtils.data.filter(object => (\r\n            object.year === year && object.country === country\r\n        ))\r\n        filteredData.forEach(object => {\r\n            result = result + getStartAge(object.age)\r\n        })\r\n        return result / filteredData.length\r\n    }\r\n\r\n    function getAverageEndAge(year, country) {\r\n        let result = 0\r\n        const filteredData = dataUtils.data.filter(object => (\r\n            object.year === year && object.country === country\r\n        ))\r\n        filteredData.forEach(object => {\r\n            result = result + getEndAge(object.age)\r\n        })\r\n        return result / filteredData.length\r\n    }\r\n\r\n    function getUpdatedData() {\r\n        let tmp = dataUtils.data\r\n            .filter(object => (\r\n                object.country === country\r\n            ))\r\n            .map(object => {\r\n                return {\r\n                    year: object.year,\r\n                    ageRange: [\r\n                        getAverageStartAge(object.year, object.country),\r\n                        getAverageEndAge(object.year, object.country)\r\n                    ]\r\n                }\r\n            })\r\n            .sort(compare);\r\n        return tmp\r\n    }\r\n\r\n    function compare(a, b) {\r\n        if (a.year > b.year) return 1\r\n        else if (b.year > a.year) return -1\r\n        return 0;\r\n    }\r\n\r\n    async function changeCountry(country) {\r\n        selectCountry(country)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {country &&\r\n            <div className={\"container\"}>\r\n                <div className={\"header\"}>\r\n                    <div className={\"selectClass\"}>\r\n                        <InputLabel id={\"selectLabel\"}>Choose country:</InputLabel>\r\n                        <Select\r\n                            labelId={\"selectLabel\"}\r\n                            value={country}\r\n                            onChange={(event => changeCountry(event.target.value))}\r\n                        >\r\n                            {allCountries.map(country => (\r\n                                <MenuItem key={country} value={country}>{country}</MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </div>\r\n                    <span className={\"chartTitle\"}>Sredni wiek osób podcza ssamobójstwa</span>\r\n                </div>\r\n                <div className={\"chartDiv\"}>\r\n                    <AreaChart\r\n                        width={700}\r\n                        height={250}\r\n                        data={specificData}\r\n                        margin={{\r\n                            top: 20, right: 20, bottom: 20, left: 20,\r\n                        }}>\r\n                        <XAxis dataKey={\"year\"} label={{value: 'Rok', angle: 0, position: 'bottom'}}/>\r\n                        <YAxis label={{value: 'Ilość', angle: -90, position: 'left'}}/>\r\n                        <Area dataKey=\"ageRange\" stroke=\"#8884d8\" fill=\"#8884d8\"/>\r\n                        <Tooltip/>\r\n                        <Legend align={\"left\"}/>\r\n                    </AreaChart>\r\n                </div>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChartOne;","D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\redux\\reducers\\index.js",[],"D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\components\\mapChart\\mapChart.jsx",["79"],"import \"./style.scss\"\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {ComposableMap, Geographies, Geography, Graticule, Sphere} from \"react-simple-maps\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport {scaleLinear} from \"d3-scale\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {progressBarActions} from \"../../redux/actions/progressBar.actions\";\r\n\r\nconst geoURL = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\"\r\n\r\n/**\r\n * Wykres mapy świata\r\n * @param dataUtils\r\n * @param setProgress\r\n * @returns {JSX.Element}\r\n * @constructor\r\n */\r\nconst MapChart = ({dataUtils}) => {\r\n\r\n    const [allCountries, setAllCountries] = useState(null)\r\n    const [years, setYears] = useState(null)\r\n    const [yearInput, setYearInput] = useState()\r\n    const [tooltipContent, setTooltipContent] = useState(\"\")\r\n    const [colorScale, setColorScale] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(progressBarActions.showProgressBar())\r\n        const countriesPromise = dataUtils.getDistinctsAllCountires()\r\n        const yearsPromise = dataUtils.getYears()\r\n        const colorScalePromise = getColorScale()\r\n        Promise.all([countriesPromise, yearsPromise, colorScalePromise]).then((values) => {\r\n            console.log(values)\r\n            setAllCountries(values[0])\r\n            setYears(values[1])\r\n            setYearInput(values[1][0])\r\n            setColorScale({'scale': values[2]})\r\n            dispatch(progressBarActions.hideProgressBar())\r\n        })\r\n    }, [])\r\n\r\n    async function getColorScale() {\r\n        let range = await dataUtils.getDeathsRange()\r\n        return scaleLinear().domain(range).range([\"#ffedea\", \"#ff5233\"])\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {(allCountries && years && yearInput && colorScale) &&\r\n            <div className={\"container\"}>\r\n                <div className={\"header\"}>\r\n                    <div className={\"selectClass\"}>\r\n                        <InputLabel id={\"selectLabel\"}>Choose date:</InputLabel>\r\n                        <Select\r\n                            labelId={\"selectLabel\"}\r\n                            value={yearInput}\r\n                            onChange={(event => setYearInput(event.target.value))}\r\n                        >\r\n                            {years.map(year => (\r\n                                <MenuItem key={year} value={year}>{year}</MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </div>\r\n                    <span className={\"title\"}>Liczba samobójstw w krajach</span>\r\n                </div>\r\n                <ComposableMap height={400} data-tip=\"\" projectionConfig={{scale: 140}}>\r\n                    <Sphere stroke=\"#E4E5E6\" strokeWidth={0.5}/>\r\n                    <Graticule stroke=\"#E4E5E6\" strokeWidth={0.5}/>\r\n                    <Geographies geography={geoURL}>\r\n                        {({geographies}) => (\r\n                            geographies.map(geo => {\r\n                                const currentCountry = allCountries.find(country => country === geo.properties.NAME_LONG)\r\n                                const deaths = dataUtils.getAllDeaths(currentCountry, yearInput);\r\n                                return (\r\n                                    <Geography\r\n                                        key={geo.rsmKey}\r\n                                        geography={geo}\r\n                                        onMouseEnter={() => {\r\n                                            let {NAME_LONG} = geo.properties;\r\n                                            let {female, male} = dataUtils.getDeathsByGender(NAME_LONG, yearInput)\r\n                                            setTooltipContent(`${NAME_LONG}: \\n\r\n                                            women: ${female} \\n\r\n                                            men: ${male} \\n\r\n                                            all: ${dataUtils.getAllDeaths(NAME_LONG, yearInput)}`);\r\n                                        }}\r\n                                        onMouseLeave={() => {\r\n                                            setTooltipContent(\"\");\r\n                                        }}\r\n                                        style={{\r\n                                            default: {\r\n                                                fill: currentCountry ? colorScale.scale(deaths) : \"#F5F4F6\",\r\n                                                outline: \"none\"\r\n                                            },\r\n                                            hover: {\r\n                                                fill: \"rgba(77,4,4,0.8)\",\r\n                                                outline: \"none\"\r\n                                            },\r\n                                            pressed: {\r\n                                                outline: \"none\"\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                );\r\n                            })\r\n                        )\r\n\r\n                        }\r\n                    </Geographies>\r\n                </ComposableMap>\r\n                <ReactTooltip>{tooltipContent}</ReactTooltip>\r\n            </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MapChart","D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\services\\dataUtils.service.js",["80","81","82"],"D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\redux\\reducers\\progressBar.reducer.js",[],"D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\redux\\actions\\progressBar.actions.js",[],"D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\components\\chernoffsFacesChart\\chernoffsFacesChart.jsx",["83","84","85","86","87","88","89","90","91","92"],{"ruleId":"93","severity":1,"message":"94","line":4,"column":8,"nodeType":"95","messageId":"96","endLine":4,"endColumn":16},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"93","severity":1,"message":"101","line":4,"column":8,"nodeType":"95","messageId":"96","endLine":4,"endColumn":16},{"ruleId":"93","severity":1,"message":"102","line":6,"column":8,"nodeType":"95","messageId":"96","endLine":6,"endColumn":16},{"ruleId":"103","severity":1,"message":"104","line":28,"column":7,"nodeType":"105","endLine":28,"endColumn":13,"suggestions":"106"},{"ruleId":"103","severity":1,"message":"104","line":32,"column":8,"nodeType":"105","endLine":32,"endColumn":19,"suggestions":"107"},{"ruleId":"103","severity":1,"message":"108","line":32,"column":8,"nodeType":"105","endLine":32,"endColumn":14,"suggestions":"109"},{"ruleId":"93","severity":1,"message":"110","line":43,"column":45,"nodeType":"95","messageId":"96","endLine":43,"endColumn":64},{"ruleId":"103","severity":1,"message":"111","line":34,"column":8,"nodeType":"105","endLine":34,"endColumn":17,"suggestions":"112"},{"ruleId":"103","severity":1,"message":"104","line":38,"column":8,"nodeType":"105","endLine":38,"endColumn":22,"suggestions":"113"},{"ruleId":"103","severity":1,"message":"114","line":47,"column":8,"nodeType":"105","endLine":47,"endColumn":10,"suggestions":"115"},{"ruleId":"103","severity":1,"message":"116","line":54,"column":8,"nodeType":"105","endLine":54,"endColumn":10,"suggestions":"117"},{"ruleId":"118","severity":1,"message":"119","line":70,"column":101,"nodeType":"120","messageId":"121","endLine":70,"endColumn":103},{"ruleId":"118","severity":1,"message":"119","line":85,"column":101,"nodeType":"120","messageId":"121","endLine":85,"endColumn":103},{"ruleId":"118","severity":1,"message":"119","line":145,"column":88,"nodeType":"120","messageId":"121","endLine":145,"endColumn":90},{"ruleId":"103","severity":1,"message":"114","line":36,"column":8,"nodeType":"105","endLine":36,"endColumn":10,"suggestions":"122"},{"ruleId":"103","severity":1,"message":"123","line":42,"column":8,"nodeType":"105","endLine":42,"endColumn":33,"suggestions":"124"},{"ruleId":"103","severity":1,"message":"125","line":46,"column":8,"nodeType":"105","endLine":46,"endColumn":14,"suggestions":"126"},{"ruleId":"103","severity":1,"message":"125","line":63,"column":8,"nodeType":"105","endLine":63,"endColumn":19,"suggestions":"127"},{"ruleId":"128","severity":1,"message":"129","line":169,"column":9,"nodeType":"130","messageId":"131","endLine":182,"endColumn":10},{"ruleId":"128","severity":1,"message":"129","line":196,"column":9,"nodeType":"130","messageId":"131","endLine":206,"endColumn":10},{"ruleId":"128","severity":1,"message":"129","line":219,"column":9,"nodeType":"130","messageId":"131","endLine":229,"endColumn":10},{"ruleId":"128","severity":1,"message":"129","line":247,"column":9,"nodeType":"130","messageId":"131","endLine":258,"endColumn":10},{"ruleId":"128","severity":1,"message":"129","line":273,"column":9,"nodeType":"130","messageId":"131","endLine":298,"endColumn":10},{"ruleId":"128","severity":1,"message":"129","line":350,"column":9,"nodeType":"130","messageId":"131","endLine":399,"endColumn":10},"no-unused-vars","'MyAppBar' is defined but never used.","Identifier","unusedVar","no-native-reassign",["132"],"no-negated-in-lhs",["133"],"'ChartOne' is defined but never used.","'MapChart' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["134"],["135"],"React Hook useEffect has missing dependencies: 'dataLoader', 'dispatch', and 'setData'. Either include them or remove the dependency array. If 'setData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["136"],"'onCancelInputWindow' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'getUpdatedData'. Either include them or remove the dependency array.",["137"],["138"],"React Hook useEffect has missing dependencies: 'dataUtils' and 'dispatch'. Either include them or remove the dependency array.",["139"],"React Hook useEffect has missing dependencies: 'dataUtils', 'dispatch', and 'getColorScale'. Either include them or remove the dependency array.",["140"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["141"],"React Hook useEffect has a missing dependency: 'dataUtils'. Either include it or remove the dependency array.",["142"],"React Hook useEffect has a missing dependency: 'drawFaces'. Either include it or remove the dependency array.",["143"],["144"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation",{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},{"desc":"147","fix":"155"},{"desc":"156","fix":"157"},{"desc":"147","fix":"158"},{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},"Update the dependencies array to be: [data, dispatch]",{"range":"165","text":"166"},"Update the dependencies array to be: [dataUtils, dispatch]",{"range":"167","text":"168"},"Update the dependencies array to be: [dataLoader, dispatch, file, setData]",{"range":"169","text":"170"},"Update the dependencies array to be: [country, dispatch, getUpdatedData]",{"range":"171","text":"172"},"Update the dependencies array to be: [dispatch, specificData]",{"range":"173","text":"174"},{"range":"175","text":"168"},"Update the dependencies array to be: [dataUtils, dispatch, getColorScale]",{"range":"176","text":"177"},{"range":"178","text":"168"},"Update the dependencies array to be: [countryInput, dataUtils, yearInput]",{"range":"179","text":"180"},"Update the dependencies array to be: [data, drawFaces]",{"range":"181","text":"182"},"Update the dependencies array to be: [dimension, drawFaces]",{"range":"183","text":"184"},[967,973],"[data, dispatch]",[1064,1075],"[dataUtils, dispatch]",[1265,1271],"[dataLoader, dispatch, file, setData]",[1129,1138],"[country, dispatch, getUpdatedData]",[1229,1243],"[dispatch, specificData]",[1538,1540],[2089,2091],"[dataUtils, dispatch, getColorScale]",[1492,1494],[1653,1678],"[countryInput, dataUtils, yearInput]",[1771,1777],"[data, drawFaces]",[2349,2360],"[dimension, drawFaces]"]