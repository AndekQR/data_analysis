[{"D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\App.js":"1","D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\reportWebVitals.js":"2","D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\index.js":"3","D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\redux\\store.js":"4","D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\components\\mainPage\\mainPage.jsx":"5","D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\services\\DataLoader.service..js":"6","D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\components\\appBar\\appBar.jsx":"7","D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\components\\theme.jsx":"8","D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\components\\chartOne\\chartOne.jsx":"9","D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\redux\\reducers\\index.js":"10","D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\components\\mapChart\\mapChart.jsx":"11","D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\services\\dataUtils.service.js":"12","D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\redux\\reducers\\progressBar.reducer.js":"13","D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\redux\\actions\\progressBar.actions.js":"14"},{"size":270,"mtime":1606837608352,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"16"},{"size":766,"mtime":1606910810600,"results":"18","hashOfConfig":"16"},{"size":338,"mtime":1608134950578,"results":"19","hashOfConfig":"16"},{"size":1582,"mtime":1608135440813,"results":"20","hashOfConfig":"16"},{"size":693,"mtime":1606842360416,"results":"21","hashOfConfig":"16"},{"size":3178,"mtime":1608134058653,"results":"22","hashOfConfig":"16"},{"size":328,"mtime":1606739030821,"results":"23","hashOfConfig":"16"},{"size":5972,"mtime":1608134629201,"results":"24","hashOfConfig":"16"},{"size":191,"mtime":1608126884146,"results":"25","hashOfConfig":"16"},{"size":5586,"mtime":1608129572368,"results":"26","hashOfConfig":"16"},{"size":3714,"mtime":1608124886096,"results":"27","hashOfConfig":"16"},{"size":443,"mtime":1608130059664,"results":"28","hashOfConfig":"16"},{"size":313,"mtime":1608126516040,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},"rj2yzq",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"33"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"33"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"33"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\App.js",["63"],"import \"./App.css\";\nimport MainPage from \"./components/mainPage/mainPage\";\nimport React from \"react\";\nimport MyAppBar from \"./components/appBar/appBar\";\n\n\nfunction App() {\n    return (\n\n        <div>\n            <MainPage/>\n        </div>\n\n    );\n}\n\nexport default App;\n",["64","65"],"D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\reportWebVitals.js",[],"D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\index.js",[],"D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\redux\\store.js",[],"D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\components\\mainPage\\mainPage.jsx",["66","67"],"D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\services\\DataLoader.service..js",[],"D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\components\\appBar\\appBar.jsx",["68","69"],"import AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {CloudUpload} from \"@material-ui/icons\";\r\nimport DataLoaderService from \"../../services/DataLoader.service.\";\r\nimport \"./style.scss\"\r\nimport progressBarImage from \"../../assets/progress.gif\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {progressBarActions} from \"../../redux/actions/progressBar.actions\";\r\n\r\nconst MyAppBar = ({setData}) => {\r\n\r\n    let dataLoader = new DataLoaderService()\r\n    const [file, setFile] = useState(null)\r\n    const progressBarState = useSelector(state => state.progressBar)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (file != null) {\r\n            dispatch(progressBarActions.showProgressBar())\r\n            dataLoader.loadData(file)\r\n                .then((value) => {\r\n                    setData(value)\r\n                    dispatch(progressBarActions.hideProgressBar())\r\n                })\r\n                .catch(error => {\r\n                    console.log(error.message)\r\n                    dispatch(progressBarActions.hideProgressBar())\r\n                })\r\n        }\r\n    }, [file])\r\n\r\n    const selectFile = event => {\r\n        dispatch(progressBarActions.showProgressBar())\r\n        setFile(event.target.files[0])\r\n        dispatch(progressBarActions.hideProgressBar())\r\n    }\r\n\r\n    const onCancelInputWindow = () => {\r\n        window.removeEventListener('focus', onCancelInputWindow)\r\n        dispatch(progressBarActions.hideProgressBar())\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={\"root\"}>\r\n            <AppBar color={\"secondary\"} position=\"static\">\r\n                <Toolbar className={\"toolbar\"}>\r\n                    {(progressBarState.visible === true) &&\r\n                    <img className={\"progressBar\"} src={progressBarImage} alt={\"progress...\"}/>}\r\n                    <div className={\"buttons_container\"}>\r\n                        <input\r\n                            accept=\".csv\"\r\n                            className={\"input\"}\r\n                            id=\"contained-button-file\"\r\n                            type=\"file\"\r\n                            style={{display: \"none\"}}\r\n                            onChange={selectFile}\r\n                        />\r\n                        <label htmlFor=\"contained-button-file\">\r\n                            {file && <span className={\"fileName\"}>{file.name}</span>}\r\n                            <Button onClick={() => {\r\n                                dispatch(progressBarActions.showProgressBar())\r\n                                // window.addEventListener('focus', onCancelInputWindow)\r\n                            }} className={\"button\"} startIcon={<CloudUpload/>} variant=\"contained\"\r\n                                    color={\"primary\"} component=\"span\">\r\n                                Choose data file\r\n                            </Button>\r\n                        </label>\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyAppBar","D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\components\\theme.jsx",[],"D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\components\\chartOne\\chartOne.jsx",["70","71","72"],"D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\redux\\reducers\\index.js",[],"D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\components\\mapChart\\mapChart.jsx",["73"],"import \"./style.scss\"\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {ComposableMap, Geographies, Geography, Graticule, Sphere} from \"react-simple-maps\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport {scaleLinear} from \"d3-scale\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {progressBarActions} from \"../../redux/actions/progressBar.actions\";\r\n\r\nconst geoURL = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\"\r\n\r\n/**\r\n * Wykres mapy świata\r\n * @param dataUtils\r\n * @param setProgress\r\n * @returns {JSX.Element}\r\n * @constructor\r\n */\r\nconst MapChart = ({dataUtils}) => {\r\n\r\n    const [allCountries, setAllCountries] = useState(null)\r\n    const [years, setYears] = useState(null)\r\n    const [yearInput, setYearInput] = useState()\r\n    const [tooltipContent, setTooltipContent] = useState(\"\")\r\n    const [colorScale, setColorScale] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(progressBarActions.showProgressBar())\r\n        const countriesPromise = dataUtils.getDistinctsAllCountires()\r\n        const yearsPromise = dataUtils.getYears()\r\n        const colorScalePromise = getColorScale()\r\n        Promise.all([countriesPromise, yearsPromise, colorScalePromise]).then((values) => {\r\n            console.log(values)\r\n            setAllCountries(values[0])\r\n            setYears(values[1])\r\n            setYearInput(values[1][0])\r\n            setColorScale({'scale': values[2]})\r\n            dispatch(progressBarActions.hideProgressBar())\r\n        })\r\n    }, [])\r\n\r\n    async function getColorScale() {\r\n        let range = await dataUtils.getDeathsRange()\r\n        return scaleLinear().domain(range).range([\"#ffedea\", \"#ff5233\"])\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {(allCountries && years && yearInput && colorScale) &&\r\n            <div className={\"container\"}>\r\n                <div className={\"header\"}>\r\n                    <div className={\"selectClass\"}>\r\n                        <InputLabel id={\"selectLabel\"}>Choose date:</InputLabel>\r\n                        <Select\r\n                            labelId={\"selectLabel\"}\r\n                            value={yearInput}\r\n                            onChange={(event => setYearInput(event.target.value))}\r\n                        >\r\n                            {years.map(year => (\r\n                                <MenuItem key={year} value={year}>{year}</MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </div>\r\n                    <span className={\"title\"}>Liczba samobójstw w krajach</span>\r\n                </div>\r\n                <ComposableMap height={400} data-tip=\"\" projectionConfig={{scale: 140}}>\r\n                    <Sphere stroke=\"#E4E5E6\" strokeWidth={0.5}/>\r\n                    <Graticule stroke=\"#E4E5E6\" strokeWidth={0.5}/>\r\n                    <Geographies geography={geoURL}>\r\n                        {({geographies}) => (\r\n                            geographies.map(geo => {\r\n                                const currentCountry = allCountries.find(country => country === geo.properties.NAME_LONG)\r\n                                const deaths = dataUtils.getAllDeaths(currentCountry, yearInput);\r\n                                return (\r\n                                    <Geography\r\n                                        key={geo.rsmKey}\r\n                                        geography={geo}\r\n                                        onMouseEnter={() => {\r\n                                            let {NAME_LONG} = geo.properties;\r\n                                            let {female, male} = dataUtils.getDeathsByGender(NAME_LONG, yearInput)\r\n                                            setTooltipContent(`${NAME_LONG}: \\n\r\n                                            women: ${female} \\n\r\n                                            men: ${male} \\n\r\n                                            all: ${dataUtils.getAllDeaths(NAME_LONG, yearInput)}`);\r\n                                        }}\r\n                                        onMouseLeave={() => {\r\n                                            setTooltipContent(\"\");\r\n                                        }}\r\n                                        style={{\r\n                                            default: {\r\n                                                fill: currentCountry ? colorScale.scale(deaths) : \"#F5F4F6\",\r\n                                                outline: \"none\"\r\n                                            },\r\n                                            hover: {\r\n                                                fill: \"rgba(77,4,4,0.8)\",\r\n                                                outline: \"none\"\r\n                                            },\r\n                                            pressed: {\r\n                                                outline: \"none\"\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                );\r\n                            })\r\n                        )\r\n\r\n                        }\r\n                    </Geographies>\r\n                </ComposableMap>\r\n                <ReactTooltip>{tooltipContent}</ReactTooltip>\r\n            </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MapChart","D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\services\\dataUtils.service.js",["74","75"],"class DataUtils {\r\n    #countries = null\r\n    #years = null\r\n\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    /**\r\n     * zwraca wsystkie unikalne kraje zawarte w danych\r\n     * @returns {Promise<null>}\r\n     */\r\n    async getDistinctsAllCountires() {\r\n        if (this.#countries == null) {\r\n            let tmp = this.data.filter((object, index, array) => {\r\n                let firstIndex = array.findIndex((t) => (\r\n                    t.country === object.country\r\n                ))\r\n                return index === firstIndex\r\n            }).map(async (filteredObject) => {\r\n                return filteredObject.country\r\n            })\r\n            this.#countries = await Promise.all(tmp)\r\n            return this.#countries\r\n        } else {\r\n            return this.#countries\r\n        }\r\n    }\r\n\r\n    /**\r\n     * zwraca wszystkie unikalne lata\r\n     * @returns {Promise<null>}\r\n     */\r\n    async getYears() {\r\n        if (this.#years == null) {\r\n            let tmp = this.data.filter((object, index, array) => {\r\n                let firstIndex = array.findIndex((t) => (\r\n                    t.year === object.year\r\n                ))\r\n                return index === firstIndex\r\n            }).map(async (filteredObject) => {\r\n                return filteredObject.year\r\n            })\r\n            this.#years = await Promise.all(tmp)\r\n            return this.#years\r\n        } else {\r\n            return this.#years\r\n        }\r\n    }\r\n\r\n    /**\r\n     * zwraca liczbę wszystkich zgonów w danym kraju i roku\r\n     * @param countryName\r\n     * @param year\r\n     * @returns {number}\r\n     */\r\n     getAllDeaths(countryName, year) {\r\n        let filteredData = this.data.filter(object => object.country === countryName && object.year == year)\r\n        let result = 0;\r\n        filteredData.forEach(object => {\r\n            result = result + Number(object.suicides_no)\r\n        })\r\n        return result\r\n    }\r\n\r\n    /**\r\n     * zwraca liczbę zgonów w danym roku i kraju, z podziałem na meżczyzny i kobiety\r\n     * @param countryName\r\n     * @param year\r\n     * @returns {{female: number, male: number}}\r\n     */\r\n    getDeathsByGender(countryName, year) {\r\n        let filteredData = this.data.filter(object => object.country === countryName && object.year == year)\r\n        let manDeaths = 0;\r\n        let womenDeaths = 0;\r\n        filteredData.forEach(element => {\r\n            if(element.sex === \"male\") {\r\n                manDeaths = manDeaths + Number(element.suicides_no)\r\n            }\r\n            else {\r\n                womenDeaths = womenDeaths + Number(element.suicides_no)\r\n            }\r\n        })\r\n        return {\r\n            \"male\": manDeaths,\r\n            \"female\": womenDeaths\r\n        }\r\n    }\r\n\r\n    /**\r\n     * zwraca minimalną i maksymalną liczbę zgonów zawartą w danych w całm roku\r\n     */\r\n    async getDeathsRange() {\r\n        let countries = await this.getDistinctsAllCountires()\r\n        let yearsList = await this.getYears()\r\n        let mappedObjects = countries.map(country => {\r\n            let objects = []\r\n            for (let i of yearsList) {\r\n                objects.push({country, \"year\":i})\r\n            }\r\n            return objects\r\n        }).flat()\r\n\r\n        let max = Math.max.apply(Math, mappedObjects.map(object => {\r\n            let tmp = this.getAllDeaths(object.country, object.year)\r\n            // console.log(`${object.country} ${object.year} = ${tmp}`)\r\n            return tmp\r\n        }))\r\n\r\n        let min = Math.min.apply(Math, mappedObjects.map(object => {\r\n            return this.getAllDeaths(object.country, object.year)\r\n        }))\r\n\r\n        return [min,max]\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default DataUtils","D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\redux\\reducers\\progressBar.reducer.js",[],"D:\\weaii\\magisterka\\semestr2\\Statystyka_w_informatyce\\data_analysis\\src\\redux\\actions\\progressBar.actions.js",[],{"ruleId":"76","severity":1,"message":"77","line":4,"column":8,"nodeType":"78","messageId":"79","endLine":4,"endColumn":16},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":27,"column":7,"nodeType":"86","endLine":27,"endColumn":13,"suggestions":"87"},{"ruleId":"84","severity":1,"message":"85","line":31,"column":8,"nodeType":"86","endLine":31,"endColumn":19,"suggestions":"88"},{"ruleId":"84","severity":1,"message":"89","line":32,"column":8,"nodeType":"86","endLine":32,"endColumn":14,"suggestions":"90"},{"ruleId":"76","severity":1,"message":"91","line":43,"column":45,"nodeType":"78","messageId":"79","endLine":43,"endColumn":64},{"ruleId":"84","severity":1,"message":"92","line":34,"column":8,"nodeType":"86","endLine":34,"endColumn":17,"suggestions":"93"},{"ruleId":"84","severity":1,"message":"85","line":38,"column":8,"nodeType":"86","endLine":38,"endColumn":22,"suggestions":"94"},{"ruleId":"84","severity":1,"message":"95","line":47,"column":8,"nodeType":"86","endLine":47,"endColumn":10,"suggestions":"96"},{"ruleId":"84","severity":1,"message":"97","line":54,"column":8,"nodeType":"86","endLine":54,"endColumn":10,"suggestions":"98"},{"ruleId":"99","severity":1,"message":"100","line":58,"column":101,"nodeType":"101","messageId":"102","endLine":58,"endColumn":103},{"ruleId":"99","severity":1,"message":"100","line":73,"column":101,"nodeType":"101","messageId":"102","endLine":73,"endColumn":103},"no-unused-vars","'MyAppBar' is defined but never used.","Identifier","unusedVar","no-native-reassign",["103"],"no-negated-in-lhs",["104"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["105"],["106"],"React Hook useEffect has missing dependencies: 'dataLoader', 'dispatch', and 'setData'. Either include them or remove the dependency array. If 'setData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["107"],"'onCancelInputWindow' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'getUpdatedData'. Either include them or remove the dependency array.",["108"],["109"],"React Hook useEffect has missing dependencies: 'dataUtils' and 'dispatch'. Either include them or remove the dependency array.",["110"],"React Hook useEffect has missing dependencies: 'dataUtils', 'dispatch', and 'getColorScale'. Either include them or remove the dependency array.",["111"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},{"desc":"114","fix":"122"},{"desc":"123","fix":"124"},"Update the dependencies array to be: [data, dispatch]",{"range":"125","text":"126"},"Update the dependencies array to be: [dataUtils, dispatch]",{"range":"127","text":"128"},"Update the dependencies array to be: [dataLoader, dispatch, file, setData]",{"range":"129","text":"130"},"Update the dependencies array to be: [country, dispatch, getUpdatedData]",{"range":"131","text":"132"},"Update the dependencies array to be: [dispatch, specificData]",{"range":"133","text":"134"},{"range":"135","text":"128"},"Update the dependencies array to be: [dataUtils, dispatch, getColorScale]",{"range":"136","text":"137"},[888,894],"[data, dispatch]",[985,996],"[dataUtils, dispatch]",[1265,1271],"[dataLoader, dispatch, file, setData]",[1129,1138],"[country, dispatch, getUpdatedData]",[1229,1243],"[dispatch, specificData]",[1538,1540],[2089,2091],"[dataUtils, dispatch, getColorScale]"]